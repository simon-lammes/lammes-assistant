generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                       Int          @id @default(autoincrement())
  firstName                String       @map("first_name")
  lastName                 String       @map("last_name")
  hashedPassword           String       @map("hashed_password")
  username                 String       @unique
  settingsUpdatedTimestamp DateTime?    @map("settings_updated_timestamp")
  exercises                Exercise[]   @relation("exercisesToUsers")
  experiences              Experience[] @relation("experiencesToUsers")
  notes                    Note[]       @relation("notesToUsers")

  @@map("users")
}

model Note {
  id                Int       @id @default(autoincrement())
  title             String
  updatedTimestamp  DateTime  @default(now()) @map("updated_timestamp")
  creatorId         Int       @map("creator_id")
  resolvedTimestamp DateTime? @map("resolved_timestamp")
  description       String?
  startTimestamp    DateTime? @default(now()) @map("start_timestamp")
  deadlineTimestamp DateTime? @map("deadline_timestamp")
  creator           User      @relation("notesToUsers", fields: [creatorId], references: [id])

  @@map("notes")
}

model Exercise {
  id                         Int             @id @default(autoincrement())
  versionTimestamp           DateTime        @map("version_timestamp")
  title                      String
  creatorId                  Int             @map("creator_id")
  markedForDeletionTimestamp DateTime?       @map("marked_for_deletion_timestamp")
  languageCode               LanguageCode    @default(en) @map("language_code")
  creator                    User            @relation("exercisesToUsers", fields: [creatorId], references: [id])
  exerciseLabels             ExerciseLabel[] @relation("exercisesToLabels")
  experiences                Experience[]    @relation("exercisesToExperiences")

  @@map("exercises")
}

model Experience {
  exerciseId           Int       @map("exercise_id")
  learnerId            Int       @map("learner_id")
  correctStreak        Int       @default(0) @map("correct_streak")
  lastStudiedTimestamp DateTime? @map("last_studied_timestamp")
  suspendedTimestamp   DateTime? @map("suspended_timestamp")
  exercise             Exercise  @relation("exercisesToExperiences", fields: [exerciseId], references: [id])
  learner              User      @relation("experiencesToUsers", fields: [learnerId], references: [id])

  @@id([exerciseId, learnerId])
  @@map("experiences")
}

model ExerciseLabel {
  exerciseId Int      @map("exercise_id")
  labelId    Int      @map("label_id")
  exercise   Exercise @relation("exercisesToLabels", fields: [exerciseId], references: [id])
  label      Label    @relation(fields: [labelId], references: [id])

  @@id([exerciseId, labelId])
  @@map("exercise_labels")
}

model Label {
  id             Int             @id @default(autoincrement())
  title          String          @unique
  exerciseLabels ExerciseLabel[]

  @@map("labels")
}

enum LanguageCode {
  en
  de

   @@map("language_code_iso_639_1")
}
